{
  "name": "my613",
  "version": "0.1.0",
  "description": "description",
  "author": "",
  "license": "MIT",
  "scripts": {
    "build": "npm run build:web && npm run build:ssr-server",
    "build": "tsc -p tsconfig.build.json",
    "build:analytics": "cross-env NODE_PATH=./ cross-env DIR=analytics backpack build",
    "build:api": "cross-env NODE_PATH=./ cross-env DIR=api backpack build",
    "build:notification-worker": "cross-env NODE_PATH=./ cross-env DIR=notification-worker backpack build",
    "build:desktop": "(cd desktop && yarn run package:all)",
    "build:email-worker": "cross-env NODE_PATH=./ cross-env DIR=email-worker backpack build",
    "build:reputation-worker": "cross-env NODE_PATH=./ cross-env DIR=reputation-worker backpack build",
    "build:search-worker": "cross-env NODE_PATH=./ cross-env DIR=search-worker backpack build",
    "build:ssr-server": "cross-env NODE_PATH=./ cross-env DIR=ssr-server backpack build",
    "build:web": "cross-env NODE_PATH=./ react-app-rewired build",
    "cypress:install": "cypress install",
    "cypress:open": "cypress open",
    "db:drop": "npm run rethinkdb:migrate -- down",
    "db:migrate": "npm run rethinkdb:migrate -- up",
    "db:reset": "yarn run db:drop && yarn run db:migrate && yarn run db:seed",
    "db:seed": "cross-env NODE_PATH=./ node api/migrations/seed/index.js",
    "dev:analytics": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,analytics*,shared:middlewares*,-analytics:resolvers cross-env DIR=analytics backpack",
    "dev:api": "cross-env FILE_STORAGE=local cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,api*,shared:rethinkdb:db-query-cache,-api:resolvers cross-env DIR=api backpack",
    "dev:api:s3": "cross-env FILE_STORAGE=s3 cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,api*,shared:middlewares*,shared:rethinkdb:db-query-cache,-api:resolvers cross-env DIR=api backpack",
    "dev:notification-worker": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,notification-worker*,shared:middlewares*,-notification-worker:resolvers cross-env DIR=notification-worker backpack",
    "dev:desktop": "(cd desktop && yarn run dev)",
    "dev:email-worker": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,email-worker*,shared:middlewares*,-email-worker:resolvers cross-env DIR=email-worker backpack",
    "dev:notification-worker": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,notification-worker*,shared:middlewares*,-notification-worker:resolvers cross-env DIR=notification-worker backpack",
    "dev:reputation-worker": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,reputation-worker*,shared:middlewares*,-reputation-worker:resolvers cross-env DIR=reputation-worker backpack",
    "dev:search-worker": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,search-worker*,shared:middlewares*,-search-worker:resolvers cross-env DIR=search-worker backpack",
    "dev:ssr-server": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,ssr-server*,shared:middlewares*,-ssr-server:resolvers cross-env DIR=ssr-server backpack",
    "dev:web": "cross-env NODE_PATH=./ react-app-rewired start",
    "eject": "react-scripts eject",
    "format": "prettier --write \"src/**/*.ts\"",
    "jest": "cross-env NODE_PATH=./ jest",
    "lint": "tslint -p tsconfig.json -c tslint.json",
    "postbuild:analytics": "cp analytics/package.json build-analytics/package.json && cp now.json build-analytics/now.json && cpy cacert build-analytics",
    "postbuild:api": "cp api/package.json build-api/package.json && cp now.json build-api/now.json && cpy cacert build-api",
    "postbuild:notification-worker": "cp notification-worker/package.json build-notification-worker/package.json && cp now.json build-notification-worker/now.json && cpy cacert build-notification-worker",
    "postbuild:email-worker": "cp email-worker/package.json build-email-worker/package.json && cp now.json build-email-worker/now.json && cpy cacert build-email-worker",
    "postbuild:notification-worker": "cp notification-worker/package.json build-notification-worker/package.json && cp now.json build-notification-worker/now.json && cpy cacert build-notification-worker",
    "postbuild:reputation-worker": "cp reputation-worker/package.json build-reputation-worker/package.json && cp now.json build-reputation-worker/now.json && cpy cacert build-reputation-worker",
    "postbuild:search-worker": "cp search-worker/package.json build-search-worker/package.json && cp now.json build-search-worker/now.json && cpy cacert build-search-worker",
    "prebuild:analytics": "rimraf build-analytics",
    "prebuild:api": "rimraf build-api",
    "prebuild:notification-worker": "rimraf build-notification-worker",
    "prebuild:email-worker": "rimraf build-email-worker",
    "prebuild:notification-worker": "rimraf build-notification-worker",
    "prebuild:reputation-worker": "rimraf build-reputation-worker",
    "prebuild:search-worker": "rimraf build-search-worker",
    "prebuild:ssr-server": "rimraf build-ssr-server",
    "prestart:api:test": "node -e \"require('./shared/testing/setup.js')().then(() => process.exit())\"",
    "prestart:prod": "rimraf dist && tsc",
    "process:emails:prod": "(cd email-template-scripts && python3 inline-html-emails.py && node sendgrid-sync.js prod)",
    "process:emails:send": "(cd email-template-scripts && node send-test-emails.js brian@spectrum.chat)",
    "process:emails:test": "(cd email-template-scripts && python3 inline-html-emails.py && node sendgrid-sync.js)",
    "release:desktop": "(cd desktop && yarn run release)",
    "rethinkdb:migrate": "rethinkdb-migrate -f ./api/migrations/config.js",
    "start": "ts-node -r tsconfig-paths/register src/main.ts && cross-env NODE_ENV=production node build-ssr-server/main.js",
    "start:analytics": "cross-env NODE_ENV=production node build-analytics/main.js",
    "start:api": "cross-env NODE_ENV=production node build-api/main.js",
    "start:api:test": "TEST_DB=true FORCE_DEV=true DEBUG=api*,shared* forever build-api/main.js",
    "start:notification-worker": "cross-env NODE_ENV=production node build-notification-worker/main.js",
    "start:debug": "nodemon --config nodemon-debug.json",
    "start:dev": "nodemon",
    "start:email-worker": "cross-env NODE_ENV=production node build-email-worker/main.js",
    "start:notification-worker": "cross-env NODE_ENV=production node build-notification-worker/main.js",
    "start:prod": "node dist/main.js",
    "start:reputation-worker": "cross-env NODE_ENV=production node build-reputation-worker/main.js",
    "start:search-worker": "cross-env NODE_ENV=production node build-search-worker/main.js",
 /*   "test": "jest",
    "test": "npm run jest -- --runInBand --watch",
    "test:ci": "npm run jest -- --forceExit --outputFile test-results.json --json --maxWorkers=2",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:desktop": "(cd desktop && yarn run package:test)",
    "test:e2e": "cypress run",
    "test:watch": "jest --watch",*/
    "webpack-defaults": "webpack-defaults"
  },
  "dependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.2.2",
    "@babel/plugin-proposal-object-rest-spread": "^7.3.1",
    "@babel/preset-env": "^7.3.1",
    "@cypress/browserify-preprocessor": "^1.1.2",
    "@kasa/koa-logging": "^0.2.0",
    "@kasa/koa-request-id": "^1.0.0",
    "@koa/cors": "^2.2.3",
    "@nestjs/common": "^5.6.2",
    "@nestjs/core": "^5.6.2",
    "@sendgrid/mail": "^6.3.1",
    "@vx/curve": "^0.0.182",
    "@vx/event": "^0.0.182",
    "@vx/gradient": "^0.0.183",
    "@vx/grid": "^0.0.183",
    "@vx/scale": "^0.0.182",
    "@vx/shape": "^0.0.183",
    "@vx/tooltip": "^0.0.182",
    "ajv": "^6.7.0",
    "algoliasearch": "^3.32.0",
    "amplitude": "^3.5.0",
    "amplitude-js": "^4.6.0-beta.2",
    "apollo-cache-inmemory": "^1.4.2",
    "apollo-client": "^2.4.12",
    "apollo-engine": "^1.1.2",
    "apollo-link": "^1.2.6",
    "apollo-link-http": "^1.5.9",
    "apollo-link-retry": "^2.2.8",
    "apollo-link-schema": "^1.1.4",
    "apollo-link-ws": "^1.0.12",
    "apollo-local-query": "^0.3.1",
    "apollo-server-koa": "^2.3.1",
    "apollo-upload-client": "^10.0.0",
    "apollo-utilities": "^1.1.2",
    "axios": "^0.18.0",
    "b2a": "^1.0.10",
    "babel-core": "^6.26.3",
    "babel-plugin-replace-dynamic-import-runtime": "^1.0.2",
    "babel-plugin-styled-components": "^1.10.0",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "backpack-core": "^0.8.3",
    "bad-words": "^3.0.0",
    "basic-auth": "^2.0.1",
    "bcrypt": "^3.0.3",
    "body-parser": "^1.18.3",
    "bull": "^3.6.0",
    "casual": "^1.6.0",
    "colors": "^1.3.3",
    "commander": "^2.19.0",
    "common-tags": "^1.8.0",
    "compression": "^1.7.3",
    "consolidate": "^0.15.1",
    "cookie-parser": "^1.4.3",
    "cookie-session": "^2.0.0-beta.3",
    "cors": "^2.8.5",
    "cross-env": "^5.2.0",
    "cryptr": "^4.0.2",
    "css.escape": "^1.5.1",
    "cypress": "^3.1.4",
    "d3-array": "^2.0.3",
    "datadog-metrics": "^0.8.1",
    "dataloader": "^1.4.0",
    "debounce": "^1.2.0",
    "debug": "^4.1.1",
    "decode-uri-component": "^0.2.0",
    "delegates": "^1.0.0",
    "dependencies": "^0.0.1",
    "dotenv": "^6.2.0",
    "draft-js": "^0.10.5",
    "draft-js-code-editor-plugin": "^0.2.1",
    "draft-js-drag-n-drop-plugin": "^2.0.3",
    "draft-js-embed-plugin": "^1.2.0",
    "draft-js-export-markdown": "^1.2.2",
    "draft-js-focus-plugin": "^2.2.0",
    "draft-js-image-plugin": "^2.0.6",
    "draft-js-import-markdown": "^1.2.3",
    "draft-js-linkify-plugin": "^2.0.1",
    "draft-js-markdown-plugin": "^3.0.5",
    "draft-js-plugins-editor": "^2.1.1",
    "draft-js-prism-plugin": "^0.1.3",
    "draftjs-to-markdown": "^0.5.1",
    "elastic-apm-node": "^2.4.0",
    "electron-context-menu": "^0.10.1",
    "electron-is-dev": "^1.0.1",
    "electron-log": "^2.2.17",
    "electron-updater": "^4.0.6",
    "electron-window-state": "^5.0.3",
    "emoji-regex": "^7.0.3",
    "escape-html": "^1.0.3",
    "etag": "^1.8.1",
    "faker": "^4.1.0",
    "find-with-regex": "^1.1.3",
    "grant-koa": "^4.4.1",
    "graphql": "^14.1.1",
    "graphql-cost-analysis": "^1.0.2",
    "graphql-date": "^1.0.3",
    "graphql-depth-limit": "^1.1.0",
    "graphql-log": "^0.1.3",
    "graphql-rate-limit": "^1.2.2",
    "graphql-tag": "^2.10.1",
    "graphql-tools": "^4.0.4",
    "graphql-upload": "^8.0.4",
    "helmet": "^3.15.0",
    "highlight.js": "^9.13.1",
    "history": "^4.7.2",
    "hoist-non-react-statics": "^3.3.0",
    "host-validation": "^2.0.1",
    "hot-shots": "^6.1.1",
    "hpp": "^0.2.2",
    "hsts": "^2.1.0",
    "i": "^0.3.6",
    "idx": "^2.5.2",
    "imgix-core-js": "^1.2.0",
    "immutability-helper": "^3.0.0",
    "immutable": "^4.0.0-rc.12",
    "ioredis": "^4.5.1",
    "is-electron": "^2.2.0",
    "isomorphic-fetch": "^2.2.1",
    "iterall": "^1.2.2",
    "json-stringify-pretty-compact": "^1.2.0",
    "jsonwebtoken": "^8.4.0",
    "jsurl": "^0.1.5",
    "keygrip": "^1.0.3",
    "koa": "^2.6.2",
    "koa-authz": "^1.0.1",
    "koa-bestest-router": "^1.0.2",
    "koa-better-body": "^3.0.4",
    "koa-bodyparser": "^4.2.1",
    "koa-cash": "^2.2.0",
    "koa-compress": "^3.0.0",
    "koa-conditional-get": "^2.0.0",
    "koa-convert": "^1.2.0",
    "koa-csrf": "^3.0.7",
    "koa-enforces-ssl": "^1.0.2",
    "koa-error": "^3.2.0",
    "koa-etag": "^3.0.0",
    "koa-file-server": "^2.3.1",
    "koa-graphiql": "^1.1.0",
    "koa-graphql": "^0.8.0",
    "koa-handle-error": "^0.0.5",
    "koa-helmet": "^4.0.0",
    "koa-i18n": "^2.1.0",
    "koa-json": "^2.0.2",
    "koa-jwt": "^3.5.1",
    "koa-locale": "^1.3.0",
    "koa-log4": "^2.3.2",
    "koa-logger": "^3.2.0",
    "koa-morgan": "^1.0.1",
    "koa-pagination": "^3.0.0",
    "koa-passport": "^4.1.1",
    "koa-protect": "^1.0.1",
    "koa-qs": "^2.0.0",
    "koa-raven": "^3.0.0",
    "koa-respond": "^2.1.0",
    "koa-response-time": "^2.1.0",
    "koa-router": "^7.4.0",
    "koa-safe-jsonp": "^0.3.1",
    "koa-server-push": "^0.1.0",
    "koa-session": "^5.10.1",
    "koa-static": "^5.0.0",
    "koa-subdomain": "^2.4.0",
    "koa-trace": "^1.0.1",
    "koa-virtual-host": "^0.2.0",
    "koa2-validation": "^1.0.0",
    "linkify-it": "^2.1.0",
    "localstorage-memory": "^1.0.3",
    "lodash": "^4.17.11",
    "lodash.defaultsdeep": "^4.6.0",
    "lodash.intersection": "^4.4.0",
    "longjohn": "^0.2.12",
    "merge-descriptors": "^1.0.1",
    "moment": "^2.24.0",
    "ms": "^2.1.1",
    "mz": "^2.7.0",
    "node-env-file": "^0.1.8",
    "node-localstorage": "^1.3.1",
    "now-env": "^3.1.0",
    "oauth2orize-koa": "^1.3.2",
    "offline-plugin": "^5.0.6",
    "passport": "^0.4.0",
    "passport-facebook": "^3.0.0",
    "passport-github2": "^0.1.11",
    "passport-google-oauth2": "^0.1.6",
    "passport-http": "^0.3.0",
    "passport-http-bearer": "^1.0.1",
    "passport-oauth2-client-password": "^0.1.2",
    "passport-twitter": "^1.0.4",
    "performance-now": "^2.1.0",
    "pino": "^5.11.0",
    "pre-commit": "^1.2.2",
    "prismjs": "^1.15.0",
    "qs": "^6.6.0",
    "query-string": "^6.2.0",
    "raf": "^3.4.1",
    "raven": "^2.6.4",
    "react": "^16.7.0",
    "react-apollo": "^2.4.0",
    "react-app-rewire-styled-components": "^3.0.2",
    "react-app-rewired": "^2.0.2",
    "react-clipboard.js": "^2.0.2",
    "react-dom": "^16.7.0",
    "react-flip-move": "^3.0.3",
    "react-helmet": "^5.2.0",
    "react-helmet-async": "^0.2.0",
    "react-image": "^2.0.0",
    "react-infinite-scroller-with-scroll-element": "^2.0.2",
    "react-loadable": "^5.5.0",
    "react-modal": "^3.8.1",
    "react-popper": "^1.3.2",
    "react-redux": "^6.0.0",
    "react-remarkable": "^1.1.3",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.3.1",
    "react-scripts": "^2.1.3",
    "react-textarea-autosize": "^7.1.0",
    "react-transition-group": "^2.5.3",
    "react-trend": "^1.2.4",
    "react-visibility-sensor": "^5.0.2",
    "recharts": "^1.4.2",
    "recompose": "^0.30.0",
    "redis-tag-cache": "^1.2.1",
    "redraft": "^0.10.2",
    "redux": "^4.0.1",
    "redux-thunk": "^2.3.0",
    "reflect-metadata": "^0.1.13",
    "request": "^2.88.0",
    "request-ip": "^2.1.3",
    "rethinkdb": "^2.3.3",
    "rethinkdb-changefeed-reconnect": "^0.3.2",
    "rethinkdb-inspector": "^0.3.3",
    "rethinkdb-migrate": "^1.4.0",
    "rethinkdbdash": "^2.3.31",
    "rethinkhaberdashery": "^2.3.32",
    "rimraf": "^2.6.3",
    "rxjs": "^6.3.3",
    "sanitize-filename": "^1.6.1",
    "serialize-javascript": "^1.6.1",
    "session-rethinkdb": "^2.0.1",
    "sha1": "^1.1.1",
    "slate": "^0.44.9",
    "slate-markdown": "^0.1.1",
    "slugg": "^1.2.1",
    "source-map-support": "^0.5.10",
    "stopword": "^0.1.13",
    "string-replace-to-array": "^1.0.3",
    "string-similarity": "^3.0.0",
    "striptags": "^3.1.1",
    "styled-components": "^4.1.3",
    "subscriptions-transport-ws": "^0.9.15",
    "sw-precache-webpack-plugin": "^0.11.5",
    "swagger-jsdoc": "^3.2.6",
    "textversionjs": "^1.1.3",
    "then-queue": "^1.3.0",
    "toobusy-js": "^0.5.1",
    "typescript": "^3.2.4",
    "upath": "^1.1.0",
    "uuid": "^3.3.2",
    "validator": "^10.11.0",
    "web-push": "^3.3.3",
    "webpack": "^4.29.0",
    "why-is-node-running": "^2.0.3"
  },
  "devDependencies": {
    "@babel/preset-flow": "^7.0.0",
    "@babel/register": "^7.0.0",
    "@nestjs/testing": "^5.6.2",
    "@types/express": "^4.16.0",
    "@types/jest": "^23.3.13",
    "@types/koa": "^2.0.48",
    "@types/node": "^10.12.18",
    "@types/supertest": "^2.0.7",
    "add": "^2.0.6",
    "babel-cli": "^6.26.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^23.6.0",
    "babel-plugin-import-inspector": "^2.0.0",
    "babel-plugin-inline-import-graphql-ast": "^2.4.1",
    "babel-plugin-istanbul": "^5.1.0",
    "babel-plugin-syntax-async-generators": "^6.13.0",
    "babel-plugin-syntax-dynamic-import": "^6.18.0",
    "babel-plugin-transform-async-generator-functions": "^6.24.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-preset-env": "^1.7.0",
    "bundle-buddy-webpack-plugin": "^0.3.0",
    "cheerio": "^1.0.0-rc.2",
    "chokidar": "^2.0.4",
    "coveralls": "^3.0.2",
    "cpy-cli": "^2.0.0",
    "cross-spawn": "^6.0.5",
    "electron": "^4.0.2",
    "electron-builder": "^20.38.5",
    "esdoc": "^1.1.0",
    "esdoc-ecmascript-proposal-plugin": "^1.0.0",
    "esdoc-importpath-plugin": "^1.0.2",
    "esdoc-standard-plugin": "^1.0.0",
    "eslint": "^5.12.1",
    "eslint-config-happiness": "^10.2.1",
    "eslint-config-kasa": "^0.2.0",
    "eslint-config-react-app": "^3.0.6",
    "eslint-plugin-import": "^2.15.0",
    "eslint-plugin-jest": "^22.1.3",
    "eslint-plugin-jsx-a11y": "^6.2.0",
    "eslint-plugin-node": "^8.0.1",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-react": "^7.12.4",
    "eslint-plugin-standard": "^4.0.0",
    "eslint-watch": "^4.0.2",
    "forever": "^0.15.3",
    "is-html": "^1.1.0",
    "jest": "^23.6.0",
    "jest-extended": "^0.11.0",
    "jest-junit": "^6.1.0",
    "koa-webpack": "^5.2.1",
    "koaton-exporter": "^1.3.0",
    "lint-staged": "^8.1.0",
    "micromatch": "^3.1.10",
    "mocha": "^5.2.0",
    "nodemon": "^1.18.9",
    "nyc": "^13.1.0",
    "pino-pretty": "^2.5.0",
    "prettier": "^1.16.1",
    "raw-loader": "^1.0.0",
    "react-app-rewire-hot-loader": "^1.0.3",
    "react-hot-loader": "^4.6.3",
    "request-promise": "^4.2.2",
    "supertest": "^3.4.2",
    "ts-jest": "^23.10.5",
    "ts-loader": "^5.3.3",
    "ts-node": "^8.0.1",
    "tsconfig-paths": "^3.7.0",
    "tslint": "^5.12.1",
    "wait-on": "^3.2.0",
    "webpack-bundle-analyzer": "^3.0.3",
    "write-file-webpack-plugin": "^4.5.0",
    "yarn": "^1.13.0"
  },
  "resolutions": {
    "immutable": "3.7.4",
    "draft-js": "npm:draft-js-fork-mxstbr",
    "jest-environment-node": "22.4.3",
    "jest": "22.4.3",
    "fbjs": "0.8.16",
    "event-stream": "3.3.4"
  }/*,
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "lint-staged": {
    "*.js": [
      "prettier --write",
      "eslint --fix",
      "git add"
    ]
  }*/
}